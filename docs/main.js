// Generated by Haxe 4.2.2
(function ($global) { "use strict";
var Main = function() {
	this.scene = new THREE.Scene();
	var fov = 75;
	var aspect = window.innerWidth / window.innerHeight;
	var near = 0.1;
	var far = 5;
	this.camera = new THREE.PerspectiveCamera(fov,aspect,near,far);
	this.camera.position.z = 3;
	this.renderer = new THREE.WebGLRenderer({ antialias : true});
	this.renderer.setSize(window.innerWidth,window.innerHeight);
	this.renderer.setClearColor(new THREE.Color("#CC7FE0"),1);
	window.document.body.appendChild(this.renderer.domElement);
	var color = 16777215;
	var intensity = 1;
	var light = new THREE.DirectionalLight(color,intensity);
	light.position.set(-1,2,4);
	this.scene.add(light);
	var boxWidth = 1;
	var boxHeight = 1;
	var boxDepth = 1;
	var geometry = new THREE.BoxGeometry(boxWidth,boxHeight,boxDepth);
	var material = new THREE.MeshPhongMaterial({ color : 4500104});
	this.cube = new THREE.Mesh(geometry,material);
	this.cube.position.x = 0;
	this.scene.add(this.cube);
	window.requestAnimationFrame($bind(this,this.render));
};
Main.main = function() {
	var app = new Main();
};
Main.prototype = {
	render: function(time) {
		time *= 0.001;
		this.cube.rotation.x = time;
		this.cube.rotation.y = time;
		this.renderer.render(this.scene,this.camera);
		window.requestAnimationFrame($bind(this,this.render));
	}
};
var haxe_iterators_ArrayIterator = function(array) {
	this.current = 0;
	this.array = array;
};
haxe_iterators_ArrayIterator.prototype = {
	hasNext: function() {
		return this.current < this.array.length;
	}
	,next: function() {
		return this.array[this.current++];
	}
};
var $_;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $global.$haxeUID++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = m.bind(o); o.hx__closures__[m.__id__] = f; } return f; }
$global.$haxeUID |= 0;
Main.main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);

//# sourceMappingURL=main.js.map